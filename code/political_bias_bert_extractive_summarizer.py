# -*- coding: utf-8 -*-
"""political_bias_bert_extractive_summarizer.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1W0CsR4WdlJkKoBTBrtzh2nD0kKGXd1L7
"""

from google.colab import files
files.upload()

# importing libraries
import nltk
nltk.download('punkt')
nltk.download('stopwords')

import pandas as pd
import re
import string

df = pd.read_csv('political_bias_labeled_binary.csv')
df.sample(5)

df.shape

# adding a separate column to count total words in the articles
def word_count(text):
  count = len(text.split())
  return count

df['word_count'] = df['article_text'].apply(lambda x: word_count(x))

df.info()

df['word_count'].describe()

!pip install -q bert-extractive-summarizer
!pip install -q spacy==2.1.3
!pip install -q transformers==2.2.2
!pip install -q neuralcoref

from summarizer import Summarizer
from pprint import pprint

model = Summarizer()  # instantiating bert-extractive-summarizer object

def summarize(text):
  result = model(text, num_sentences=5, min_length=60)
  summary = ''.join(result)
  return summary

# adding summary of article_text
df['summary'] = df['article_text'].apply(lambda x: summarize(x))

df['summary_word_count'] = df['summary'].apply(lambda x: len(str(x)))

# reordering the columns
df=df[['article_text',	'word_count',	'summary', 'summary_word_count', 'label']]

df.sample(5)

df.loc[340]['summary']

df['label'].value_counts()

df.to_csv('political_bias_summarized_binary_levels.csv', index=False)
files.download('political_bias_summarized_binary_levels.csv')